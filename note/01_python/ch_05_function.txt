5장 함수
	1절 함수의 정의 및 사용
	- 사용할 코드를 묶어 놓고 그것에 이름을 붙인 것
	- 오버로딩(같은 이름의 함수를 매개 변수의 개수느 타입을 달리해서 사용) 불가 
	    : 자바에서는 
        	void print(int a) {system.out.println(a);}
        	void print(string a) {system.out.println(a);}
		위와 같이 함수에 기능을 추가할 수 있는데 파이썬은 불가능하다.
   		 : a=10 ; a=20 ; 처럼 (기능성 처리 변수) 의 할당의 개념으로 생각하자
		- 함수의 정의
			```
			def 함수명(매개변수1, 매개변수2, ......매개변수n) :
  			  함수 호출 시 실행할 내용 : 명령어 1
  			  함수 호출 시 실행할 내용 : 명령어 2
  			  ......
  			  함수 호출 시 실행할 내용 : 명령어 n
			```
		1.1 함수 정의
			함수는 위 내용과 동일하게 정의한다.
			주의할 사항은 내가 정의한 함수명으로 변수를 할당하면 변수를 del하여도 다시는 함수 기능이 돌아오지 못한다 : 정보가 덮어씌어진다.
			함수를 다른 변수에 기능성 변수로 할당하면 제거하여도 아무런 영향이 없다.
		
		1.2 docstring 
			함수에 대해 설명을 덧붙여서 사용자로 하여금 사용을 용이하게 한다.

		1.3 전역변수와 로컬변수
			* 전역변수 : 전체에서 활용하는 변수. 
			* 로컬변수 : 함수 속에서만 사용하는 임시 매개변수들. 
					만약 전역변수와 같은 변수명을 사용하면 반드시 초기화 과정(선언과정)이 필요하다.
					전역변수를 함수를 통해 수정과 변경 등의 접근을 하려면 global 예약어를 사용해라.

		1.4 스칼라 호출은 주소가 바뀌어서 원본이 안전하지만
		1.5 참조에 의한 호출은 같은 주소에 간섭해서 원본이 변경된다.

2절 반환값이 필요하고 이걸 활용하려면 return 이후 값으로 받아서 쓰는 게 용이하다. print()쓰면 변수에 결과 할당이 불가

3절 함수의 매개변수
		- 매개변수에 기본값을 가질 때 : 호출 시 선택적으로 명시
			- 매개변수의 기본값이 스칼라 변수일 때 : 기본값은 함수 정의 시점
			- 매개변수의 기본값이 데이터구조 객체 : 기본값은 함수 호출 시점
		- 키워드 인수 : 기본값 갖고 호출 시 매개변수 명을 반드시 기입해야 하는 경우 ## 유저가 사용하려면 반.드.시 매개변수명을 활용해서 쓰라는 거다.
		!!!! 함수 정의 시 사용하는 개념
		- 튜플 매개변수 : *args 가변 인수를 구현할 때 사용한다.
		- 딕셔너리 매개변수 : **kwargs 여러 개의 키워드 인수를 딕셔너리 형태로 받아서 사용

		!!!! 언패킹
		- 튜플인수 언패킹 : 함수 호출 시 변수 앞에 * 를 붙이면 순서인수로 받음
		- 딕셔너리 언패킹 : 함수 호출 시 딕셔너리 변수 앞에 **를 붙여서 순서인수로 전환

		!!!! 함수 정의 시 매개변수 순서 !!!!
			- 순서 인수 > 튜플 인수 > 키워드 인수 > 딕셔너리 인수 