7장 객체 지향 프로그래밍

클래스 : 이름, 속성을 갖는 객체를 만들기 위한 틀, 설계도. 최초 클래스를 만들면 기초 클래스 Object를 상속한다(오버라이딩) : 그래서 dir해서 내용을 보면 내가 만들지 않은 여러 속성을 이미 포함하고 있다.

	- ex) class Person :
			pass
		a = Person() # Person 객체. Person 속 여러 변수와 메서드를 사용할 수 있음. Object의 여러 변수와 메서드를 상속해서 사용이 가능하기는 하다.

	- 생성자(__init__()), 소멸자(__del__)
	- 생성자를 통해 인스턴스 변수를 갖는 객체를 형성하기 쉽다.(아래 언급되어 있으나 변수는 차후에도 할당은 가능하다. 그러나 이걸 가공이 가능할지는..)
	- def __init__(self, 변수들,...) :
		self.name = name ... 형태로 사용

	 -   변수     : 클래스 변수 / 인스턴스 변수
			: 클래스 변수는 기본값이라고 생각하고
			: 인스턴스 변수는 할당한 특정값이라고 생각하자.
			-> 데이터를 접근하는 순서는 인스턴스 속에 있는 지 체크하고 클래스 변수를 가져온다.
			-> 인스턴스 변수를 할당하면 인스턴스 변수들의 영역에 할당되고 우선 접근하게 된다. 나중에 클래스 변수를 수정해도 영향이 없다.
			
			: 변수의 할당은 클래스명.변수명 = 값 을 통해 클래스 변수를 할당(추가할당, 수정도 가능)하고
						인스턴스명.변수명 = 값 을 통해 인스턴스 변수 또한 할당(추가할당, 수정도 가능)한다.

	- 메서드 : 인스턴스 메서드, 클래스 메서드(@classmethod), 스태틱 메서드(@staticmethod)
			1. 인스턴스 메서드 : 변수로 self 필수. 호출은 객체이름.인스턴스메서드(변수들)
			2. 클래스 메서드 : 변수로 cls 사용 !!!! 클래스 자체를 cls가 받음 !!!! 보통 클래스 변수를 통한 로직이 있을 때 사용한다
			3. 스태틱 메서드 : 변수 불필요. 변수를 사용한다는 내용보다 로직이 우선일 때(딥러닝 중 이미지 관련 활동할 때 사용할 예정)

상속과 재정의 : class 자식클래스명(부모클래스명) : 문법을 활용한다.
	기본적으로 모든 메서드와 클래스변수, 스태틱 변수를 상속받아 사용이 가능하다.
	여기에 사용하고픈 메서드를 추가하거나, 기존의 메서드를 오버라이딩(함수의 재정의 ; 매개변수 종류,개수 동일)하여 사용할 수 있다.
	필요시 super() 메서드를 사용한다
	ex) class Person :
		def __init__(self, x, y) :
			self.x = x
			self.y = y
	# 상속받을 클래스
		class Kid(Person) :
			def __init__(self, x, y, z) :
				super().__init__(x,y) # self.x =x ; self.y = y. 내용을 그대로 받는다
				self.z = z 

	클래스를 사용하다보면 간혹 raise Exception('string line') 블록이 있는데
	이는 추상메서드로 필요한 메서드를 정의해서 사용하라는 의미로 django 등에서 사용할 때가 간혹 있다.


	static 변수는 __스태틱변수명 = '' 문법으로 클래스변수 위치에 존재하는데
	class변수와 달리 외부 접근이 불가하고
	접근 시 클래스명._클래스명__스태틱변수명 으로 접근하여 보안을 유지한다.
	내부적으로 다룰 정보를 저장함에 용이하다.
	다루는 정보는 학번 부여, 학생 수 관리 등에 용이하다.
	** 주피터 노트북의 경우 실행을 쉘 단위로 끊어서 하다 보니 __del__() 메서드의 결과가 애매모호할 경우가 많다.

	** 특별한 용도로 정의되어 있는 속성과 메서드
	- __dict__ : 속성을 이용해 클래스 멤버를 확인 가능하다.
	- __str__() : 속성을 이용해 print() 함수의 인자로 객체를 전달하면 return 값을 반환한다.
	-  __doc__ : 속성은 독스트링을 갖는다.
	- __init__() : 메소드는 생성자를 정의할 때 사용한다.

** 실제로 프로그래밍을 하며 쓸 일은 많지 않지만 다른 사람들이 만든 라이브러리를 사용할 때 해석할 수 있을 정도의 수준은 되야한다
