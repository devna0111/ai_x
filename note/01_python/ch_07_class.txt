7장 객체 지향 프로그래밍

클래스 : 이름, 속성을 갖는 객체를 만들기 위한 틀, 설계도. 최초 클래스를 만들면 기초 클래스 Object를 상속한다(오버라이딩) : 그래서 dir해서 내용을 보면 내가 만들지 않은 여러 속성을 이미 포함하고 있다.

	- ex) class Person :
			pass
		a = Person() # Person 객체. Person 속 여러 변수와 메서드를 사용할 수 있음. Object의 여러 변수와 메서드를 상속해서 사용이 가능하기는 하다.

	- 생성자(__init__()), 소멸자(__del__)
	- 생성자를 통해 인스턴스 변수를 갖는 객체를 형성하기 쉽다.(아래 언급되어 있으나 변수는 차후에도 할당은 가능하다. 그러나 이걸 가공이 가능할지는..)
	- def __init__(self, 변수들,...) :
		self.name = name ... 형태로 사용

	 -   변수     : 클래스 변수 / 인스턴스 변수
			: 클래스 변수는 기본값이라고 생각하고
			: 인스턴스 변수는 할당한 특정값이라고 생각하자.
			-> 데이터를 접근하는 순서는 인스턴스 속에 있는 지 체크하고 클래스 변수를 가져온다.
			-> 인스턴스 변수를 할당하면 인스턴스 변수들의 영역에 할당되고 우선 접근하게 된다. 나중에 클래스 변수를 수정해도 영향이 없다.
			
			: 변수의 할당은 클래스명.변수명 = 값 을 통해 클래스 변수를 할당(추가할당, 수정도 가능)하고
						인스턴스명.변수명 = 값 을 통해 인스턴스 변수 또한 할당(추가할당, 수정도 가능)한다.

	- 메서드 : 인스턴스 메서드, 클래스 메서드(@classmethod), 스태틱 메서드(@staticmethod)
			1. 인스턴스 메서드 : 변수로 self 필수. 호출은 객체이름.인스턴스메서드(변수들)
			2. 클래스 메서드 : 변수로 cls 사용 !!!! 클래스 자체를 cls가 받음 !!!! 보통 클래스 변수를 통한 로직이 있을 때 사용한다
			3. 스태틱 메서드 : 변수 불필요. 변수를 사용한다는 내용보다 로직이 우선일 때(딥러닝 중 이미지 관련 활동할 때 사용할 예정)