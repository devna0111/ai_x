1. 파일의 입출력은
    *.txt : 히스토리 체크용
    *.pkl : 객체 리스트 저장 : 머신러닝 모델 저장용
    *.csv : 빅데이터를 외부에서 받아 쓰는 가장 흔한 형태
            -> DataFrame으로 사용하기 정말 용이
    *.json : 딕셔너리타입의 정보를 리스트에 담아서 활용
    *.hdf5 : 딥러닝 모델 저장용
    .... 등 여러 경우의 수가 있다
    ## 딕셔너리 리스트라는 표현이 자주 등장하는데 일반적인 경우 모든 class들은 Object 최상위 클래스로부터 __dict__를 상속받아 객체 -> 딕셔너리 리스트 반환이 용이하다

    1-1. txt 파일의 입출력
        출력 : write('단일') , writelines(['입력할 문장의','리스트']
        with open('파일주소','w',encoding='utf-8') as f :
            data_list = f.write('hello, python')
        입력 : read(), readline(), readlines() ** readlines를 자주 쓰며, 문장을 입력받아리스트로 반환해줌
        with open('파일주소','r',encoding='utf-8') as f :
            data_list = f.read()
            
    1-2. pickle의 입출력 : import pickle // 일반적인 방법으로 못열고 파이썬에서만 열 수 있다
        출력 : dump([객체1,객체2,객체3....])
        입력 : load('읽을자료')
        
    1-3. csv의 입출력 : import csv :: encoding = 'utf-8' 생활화
        출력 : csv.DictWriter() or csv.writer()
        입력 : csv.DictReader() or csv.reader()
    
    1-4. json의 입출력 : import json 
        출력 : dump(딕셔너리리스트,스트림객체,ensure_ascii=False,indent='\t')
        입력 : load(json파일)
        
    1-5. hdf5 또는 h5 파일의 입출력 : import h5py 활용 *****다중차원 저장 가능 -> 딥러닝 모델을 저장하기 좋음(신경망구조)*****
    
           기존 open 함수를 사용했으나 hdf5 파일은 h5py.File()함수를 사용해야한다.
           
           1-5-1. 데이터프레임 <=> hdf5 파일
                   쓰기 : 데이터프레임.to_hdf('data/ch09_iris.hdf5', key = 'iris') # key 인자 필수
                   읽기 : import pandas as pd // pd.DataFrame.read_hdf5('data/ch09_iris.hdf5', key = 'iris')
                   
           1-5-2. 딕셔너리리스트 <=> hdf5 파일
           
                   쓰기 문법 : 
                           import h5py
                            with h5py.File('data/ch09_iris_dic.hdf5', 'w') as f : # open이 아니라 File로 쓰기 가능한 stream 객체 생성
                                for group, value in iris_dic.items() :
                                    grp = f.create_group(group) # 그룹을 먼저 형성하고
                                    for key, data in value.items() :
                                        grp.create_dataset(str(key), data = data) # 그룹 속에 내용을 추가한다. key는 항상 문자로 기입하도록 한다.
                                        
                   읽기 문법 :
                       import h5py
                        with h5py.File('data/ch09_iris_dic.hdf5', 'r') as f : # open이 아니라 File로 읽기 가능한 stream 객체 생성
                            for group, value in f.items() :
                                print('그룹 :',group)
                            using_data = {}
                            for key, data in value.items() :
                                using_data[key] = data
                                print(f'{key}:{data[()]}', end = '\t') # data[()] : hdf5의 DataSet타입을 가져올 때 사용하는 문법
                                using_data[group] = using_data
                          